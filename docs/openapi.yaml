openapi: "3.0.3"
info:
  title: Equipment Management API
  description: |-
    設備点検管理アプリのAPI仕様書です。
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: equipment
    description: 設備情報に関する操作
  - name: plan
    description: 点検計画に関する操作
  - name: history
    description: 点検履歴に関する操作
  - name: mail
    description: メール送信に関する操作
paths:
  /equipments:
    get:
      tags:
        - equipment
      summary: 設備情報と点検期限の取得
      description: クエリパラメータで入力された条件に合致する設備の設備情報とその点検期限を取得する。条件を入力しない場合は全ての設備とその点検期限を取得する
      parameters:
        - name: name
          in: query
          description: 設備名称に入力した文字が含まれる設備が検索される
          required: false
          schema:
            type: string
          example: ポンプ
        - name: number
          in: query
          description: 設備番号に入力した文字が含まれる設備が検索される
          required: false
          schema:
            type: string
          example: 001
        - name: location
          in: query
          description: 設置場所に入力した文字が含まれる設備が検索される
          required: false
          schema:
            type: string
          example: Area1
        - name: deadline
          in: query
          description: 点検期限が入力した日付以前の設備が検索される
          required: false
          schema:
            type: string
          example: Area1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    equipmentId:
                      type: int
                      example: 1
                    name:
                      type: string
                      example: 循環ポンプA
                    number:
                      type: string
                      example: A1-C001A
                    location:
                      type: string
                      example: Area1
                    checkPlanId:
                      type: int
                      example: 1
                    checkType:
                      type: string
                      example: 簡易点検
                    deadline:
                      type: string
                      example: 2023-09-03
    post:
      tags:
        - equipment
      summary: 新規設備登録
      description: 設備を新たに登録する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: false
                  example: 循環ポンプB
                number:
                  type: string
                  nullable: false
                  example: A1-C001B
                location:
                  type: string
                  nullable: false
                  example: Area1
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 設備が正常に登録されました
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestEquipment'
  /equipments/{equipmentId}:
    get:
      tags:
        - equipment
      summary: 指定したIDの設備情報の取得
      description: 指定した設備IDの設備情報を取得する
      parameters:
        - name: equipmentId
          in: path
          description: 取得したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    equipmentId:
                      type: int
                      example: 1
                    name:
                      type: string
                      example: 循環ポンプA
                    number:
                      type: string
                      example: A1-C001A
                    location:
                      type: string
                      example: Area1
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    patch:
      tags:
        - equipment
      summary: 設備情報の更新
      description: 指定した設備IDの設備情報を更新する
      parameters:
        - name: equipmentId
          in: path
          description: 更新したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: false
                  example: 循環ポンプB
                number:
                  type: string
                  nullable: false
                  example: A1-C001B
                location:
                  type: string
                  nullable: false
                  example: Area1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 設備が正常に更新されました
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestEquipment'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - equipment
      summary: 設備情報の削除
      description: 指定した設備IDの設備情報を削除する
      parameters:
        - name: equipmentId
          in: path
          description: 削除したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 設備が正常に削除されました
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /equipments/{equipmentId}/plans:
    get:
      tags:
        - plan
      summary: 点検計画の取得
      description: 指定した設備IDの設備の点検計画を取得する
      parameters:
        - name: equipmentId
          in: path
          description: 点検計画を取得したい設備の設備ID
          required: true
          schema:
            type: number
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    checkPlanId:
                      type: int
                      example: 1
                    equipmentId:
                      type: int
                      example: 1
                    checkType:
                      type: string
                      example: 簡易点検
                    period:
                      type: string
                      example: 1年
                    deadline:
                      type: string
                      example: 2023-09-03
    post:
      tags:
        - plan
      summary: 点検計画の登録
      description: 指定したIDの設備の点検計画を登録する
      parameters:
        - name: equipmentId
          in: path
          description: 点検計画を登録したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkType:
                  type: string
                  nullable: false
                  example: 簡易点検
                period:
                  type: string
                  nullable: false
                  example: 1年
                deadline:
                  type: string
                  nullable: false
                  example: 2023-09-03
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検計画が正常に登録されました
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestPlan'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - plan
      summary: 指定した設備IDの点検計画の削除
      description: 指定した設備IDに紐づく点検計画を全て削除する
      parameters:
        - name: equipmentId
          in: path
          description: 点検計画を削除したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検計画が正常に削除されました
  /plans/{checkPlanId}:
    patch:
      tags:
        - plan
      summary: 点検計画の更新
      description: 指定した点検計画IDの点検計画を更新する
      parameters:
        - name: checkPlanId
          in: path
          description: 更新したい点検計画の点検計画ID
          required: true
          schema:
            type: int
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkType:
                  type: string
                  nullable: false
                  example: 簡易点検
                period:
                  type: string
                  nullable: false
                  example: 1年
                deadline:
                  type: string
                  nullable: false
                  example: 2023-09-03
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検計画が正常に更新されました
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestPlan'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - plan
      summary: 指定した点検計画IDの点検計画の削除
      description: 指定した点検計画IDの点検計画を削除する
      parameters:
        - name: checkPlanId
          in: path
          description: 削除したい点検計画の点検計画ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検計画が正常に削除されました
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /equipments/{equipmentId}/histories:
    get:
      tags:
        - history
      summary: 点検履歴の取得
      description: 指定した設備IDの設備の点検履歴を取得する
      parameters:
        - name: equipmentId
          in: path
          description: 点検履歴を取得したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    checkHistoryId:
                      type: int
                      example: 1
                    equipmentId:
                      type: int
                      example: 1
                    implementationDate:
                      type: string
                      example: 2020-09-03
                    checkType:
                      type: string
                      example: 簡易点検
                    result:
                      type: string
                      example: 補修塗装を実施
    post:
      tags:
        - history
      summary: 点検履歴の登録
      description: 指定した設備IDの設備の点検履歴を登録する
      parameters:
        - name: equipmentId
          in: path
          description: 点検履歴を登録したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                implementationDate:
                  type: string
                  nullable: false
                  example: 2022-09-03
                checkType:
                  type: string
                  nullable: false
                  example: 簡易点検
                result:
                  type: string
                  nullable: false
                  example: 良
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検履歴が正常に登録されました
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestHistory'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - history
      summary: 指定した設備IDの点検履歴の削除
      description: 指定した設備IDに紐づく点検履歴を全て削除する
      parameters:
        - name: equipmentId
          in: path
          description: 点検履歴を削除したい設備の設備ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検履歴が正常に削除されました
  /histories/{checkHistoryId}:
    patch:
      tags:
        - history
      summary: 点検履歴の更新
      description: 指定した点検履歴IDの点検履歴を更新する
      parameters:
        - name: checkHistoryId
          in: path
          description: 更新したい点検履歴の点検履歴ID
          required: true
          schema:
            type: int
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                implementationDate:
                  type: string
                  nullable: false
                  example: 2022-09-03
                checkType:
                  type: string
                  nullable: false
                  example: 簡易点検
                result:
                  type: string
                  nullable: false
                  example: 良
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検履歴が正常に更新されました
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestHistory'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      tags:
        - history
      summary: 指定した点検履歴ID点検履歴の削除
      description: 指定した点検履歴IDの点検履歴を削除する
      parameters:
        - name: checkHistoryId
          in: path
          description: 削除したい点検履歴の点検履歴ID
          required: true
          schema:
            type: int
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 点検履歴が正常に削除されました
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
components:
  schemas:
    BadRequestEquipment:
      description: 設備情報に関する操作でリクエストボディに不備がある場合のレスポンス
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: name,number,locationは必須項目です。20文字以内で入力してください
        path:
          type: string
          example: 指定したパス
    BadRequestPlan:
      description: 点検計画に関する操作でリクエストボディに不備がある場合のレスポンス
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: checkType,periodは必須項目です。10文字以内で入力してください
        path:
          type: string
          example: 指定したパス
    BadRequestHistory:
      description: 点検履歴に関する操作でリクエストボディに不備がある場合のレスポンス
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          example: 400
        error:
          type: string
          example: Bad Request
        message:
          type: string
          example: checkType,periodは必須項目です。10文字以内で入力してください
        path:
          type: string
          example: 指定したパス
    NotFound:
      description: 指定したリソースが存在しない場合のレスポンス
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          example: 404
        error:
          type: string
          example: Not Found
        message:
          type: string
          example: Not Found
        path:
          type: string
          example: 指定したパス
